import React, { useState, useEffect } from 'react';
import { Card, CardHeader, CardTitle, CardContent, CardDescription, CardFooter } from "@/components/ui/card";
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Badge } from '@/components/ui/badge';
import { PlusCircle, Edit, Trash2, FileText, Save } from 'lucide-react';
import { useToast } from "@/components/ui/use-toast";

const ContentManagement = ({ handleFeatureClick: propHandleFeatureClick }) => {
    const { toast } = useToast();
    const [serviceTypes, setServiceTypes] = useState(JSON.parse(localStorage.getItem('lilium_admin_service_types_v1')) || [
        { id: 'st1', name: 'ุชุฐุงูุฑ VIP', description: 'ุชุฐุงูุฑ ุฎุงุตุฉ ููุจุงุฑ ุงูุดุฎุตูุงุช ูุน ูุฒุงูุง ุญุตุฑูุฉ.' },
        { id: 'st2', name: 'ุชุฌุงุฑุจ ูุฑูุฏุฉ', description: 'ุชุฌุงุฑุจ ุบูุฑ ุชูููุฏูุฉ ูุซู ุฑุญูุงุช ุงูุณูุงุฑู ุฃู ุงูุบูุต.' },
        { id: 'st3', name: 'ุจูููู ููุชูุญ', description: 'ุฎุฏูุงุช ุฅุนุงุดุฉ ูุจููููุงุช ููุชูุญุฉ ููููุงุณุจุงุช.' },
    ]);
    const [policies, setPolicies] = useState(JSON.parse(localStorage.getItem('lilium_admin_policies_v1')) || {
        usage_terms: 'ูุฐู ูู ุดุฑูุท ุงูุงุณุชุฎุฏุงู ุงูุนุงูุฉ ููููุตุฉ...',
        privacy_policy: 'ูุฐู ูู ุณูุงุณุฉ ุงูุฎุตูุตูุฉ ุงูุนุงูุฉ ููููุตุฉ...',
        provider_agreement: 'ูุฐู ูู ุงุชูุงููุฉ ูุฒูุฏ ุงูุฎุฏูุฉ...',
    });
    const [blogPosts, setBlogPosts] = useState(JSON.parse(localStorage.getItem('lilium_admin_blog_posts_v1')) || [
        { id: 'bp1', title: 'ุฃูุถู 5 ูุงุนุงุช ุฃูุฑุงุญ ูู ุงูุฑูุงุถ ูุนุงู 2025', status: 'ูุณูุฏุฉ' },
        { id: 'bp2', title: 'ููู ุชุฎุชุงุฑ ุจุงูุฉ ุงูุชุตููุฑ ุงููุซุงููุฉ ูุฒูุงููุ', status: 'ูุณูุฏุฉ' },
    ]);
    const [legalContent, setLegalContent] = useState({
        terms: localStorage.getItem('lilium_legal_terms_v1') || 'ููุง ูุต ุดุฑูุท ุงูุงุณุชุฎุฏุงู ุงูุงูุชุฑุงุถู...',
        privacy: localStorage.getItem('lilium_legal_privacy_v1') || 'ููุง ูุต ุณูุงุณุฉ ุงูุฎุตูุตูุฉ ุงูุงูุชุฑุงุถู...'
    });

    const handleFeatureClick = (featureName) => {
        if (propHandleFeatureClick && typeof propHandleFeatureClick === 'function') {
            propHandleFeatureClick(featureName);
        } else {
            toast({
                title: "๐ง ููุฒุฉ ููุฏ ุงูุชุทููุฑ",
                description: `ููุฒุฉ "${featureName}" ููุณุช ููุนูุฉ ุจุนุฏุ ูููู ููููู ุทูุจูุง ูู ุฑุณุงูุชู ุงููุงุฏูุฉ! ๐`,
            });
        }
    };

    const handleLegalContentChange = (key, value) => {
        setLegalContent(prev => ({ ...prev, [key]: value }));
    };

    const saveLegalContent = () => {
        localStorage.setItem('lilium_legal_terms_v1', legalContent.terms);
        localStorage.setItem('lilium_legal_privacy_v1', legalContent.privacy);
        toast({ title: "ุชู ุงูุญูุธ", description: "ุชู ุญูุธ ุงููุญุชูู ุงููุงูููู ุจูุฌุงุญ." });
        handleFeatureClick("ุญูุธ ุงููุญุชูู ุงููุงูููู");
    };

    return (
        <div className="space-y-8">
            <h2 className="text-3xl font-bold text-slate-800">ุฅุฏุงุฑุฉ ุงููุญุชูู ูุงูุฎุฏูุงุช</h2>
            
            <Card>
                <CardHeader>
                    <CardTitle>ุฃููุงุน ุงูุฎุฏูุงุช ุงููุชุงุญุฉ ูู ุงูููุตุฉ</CardTitle>
                    <CardDescription>ุฅุฏุงุฑุฉ ุฃููุงุน ุงูุฎุฏูุงุช ุงูุฑุฆูุณูุฉ ุงูุชู ูููู ููุฒูุฏู ุงูุฎุฏูุงุช ุฅุถุงูุชูุง.</CardDescription>
                </CardHeader>
                <CardContent>
                    <Table>
                        <TableHeader><TableRow><TableHead>ุงูููุน</TableHead><TableHead>ุงููุตู</TableHead><TableHead>ุฅุฌุฑุงุกุงุช</TableHead></TableRow></TableHeader>
                        <TableBody>
                            {serviceTypes.map(type => (
                                <TableRow key={type.id}>
                                    <TableCell className="font-semibold">{type.name}</TableCell>
                                    <TableCell>{type.description}</TableCell>
                                    <TableCell><Button variant="ghost" size="icon" onClick={() => handleFeatureClick(`ุชุนุฏูู ููุน ุงูุฎุฏูุฉ: ${type.name}`)}><Edit className="w-4 h-4"/></Button></TableCell>
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </CardContent>
                <CardFooter><Button onClick={() => handleFeatureClick("ุฅุถุงูุฉ ููุน ุฎุฏูุฉ ุฌุฏูุฏ")}><PlusCircle className="w-4 h-4 ml-2"/>ุฅุถุงูุฉ ููุน ุฌุฏูุฏ</Button></CardFooter>
            </Card>

            <Card>
                <CardHeader>
                    <CardTitle>ุฅุฏุงุฑุฉ ูุตูุต ุงูุณูุงุณุงุช ุงูุนุงูุฉ</CardTitle>
                    <CardDescription>ุชุนุฏูู ูุตูุต ุงูุณูุงุณุงุช ุงูุชู ุชุธูุฑ ูู ุฃุฌุฒุงุก ูุฎุชููุฉ ูู ุงูููุตุฉ.</CardDescription>
                </CardHeader>
                <CardContent className="space-y-4">
                    {Object.entries(policies).map(([key, value]) => (
                        <div key={key}>
                            <Label htmlFor={key} className="capitalize">{key.replace('_', ' ')}</Label>
                            <Textarea id={key} value={value} onChange={(e) => setPolicies(p => ({...p, [key]: e.target.value}))} />
                        </div>
                    ))}
                </CardContent>
                <CardFooter><Button onClick={() => handleFeatureClick("ุญูุธ ุงูุณูุงุณุงุช ุงูุนุงูุฉ")}>ุญูุธ ุงูุณูุงุณุงุช</Button></CardFooter>
            </Card>

            <Card>
                <CardHeader>
                    <CardTitle>ุฅุฏุงุฑุฉ ุงููุฏููุฉ</CardTitle>
                    <CardDescription>ุฅูุดุงุก ูุฅุฏุงุฑุฉ ุงูููุงูุงุช ุงูุชู ุชุธูุฑ ูู ูุฏููุฉ ุงูููุตุฉ.</CardDescription>
                </CardHeader>
                <CardContent>
                    <Table>
                        <TableHeader><TableRow><TableHead>ุงูุนููุงู</TableHead><TableHead>ุงูุญุงูุฉ</TableHead><TableHead>ุฅุฌุฑุงุกุงุช</TableHead></TableRow></TableHeader>
                        <TableBody>
                            {blogPosts.map(post => (
                                <TableRow key={post.id}>
                                    <TableCell>{post.title}</TableCell>
                                    <TableCell><Badge>{post.status}</Badge></TableCell>
                                    <TableCell><Button variant="ghost" size="icon" onClick={() => handleFeatureClick(`ุชุนุฏูู ููุงู: ${post.title}`)}><Edit className="w-4 h-4"/></Button></TableCell>
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                </CardContent>
                <CardFooter><Button onClick={() => handleFeatureClick("ุฅุถุงูุฉ ููุงู ุฌุฏูุฏ")}><PlusCircle className="w-4 h-4 ml-2"/>ุฅุถุงูุฉ ููุงู ุฌุฏูุฏ</Button></CardFooter>
            </Card>

            <Card>
                <CardHeader>
                    <CardTitle className="flex items-center gap-2"><FileText /> ุฅุฏุงุฑุฉ ุงููุญุชูู ุงููุงูููู</CardTitle>
                    <CardDescription>ุชุนุฏูู ุดุฑูุท ุงูุงุณุชุฎุฏุงู ูุณูุงุณุฉ ุงูุฎุตูุตูุฉ ุงูุชู ุชุธูุฑ ูููุณุชุฎุฏููู ููุฒูุฏู ุงูุฎุฏูุงุช.</CardDescription>
                </CardHeader>
                <CardContent className="space-y-6">
                    <div>
                        <Label htmlFor="termsOfUse" className="text-lg font-semibold">ุดุฑูุท ุงุณุชุฎุฏุงู ุงูููุตุฉ</Label>
                        <Textarea 
                            id="termsOfUse" 
                            className="mt-2 min-h-[200px]" 
                            value={legalContent.terms}
                            onChange={(e) => handleLegalContentChange('terms', e.target.value)}
                        />
                    </div>
                    <div>
                        <Label htmlFor="privacyPolicy" className="text-lg font-semibold">ุณูุงุณุฉ ุงูุฎุตูุตูุฉ</Label>
                        <Textarea 
                            id="privacyPolicy" 
                            className="mt-2 min-h-[200px]" 
                            value={legalContent.privacy}
                            onChange={(e) => handleLegalContentChange('privacy', e.target.value)}
                        />
                    </div>
                </CardContent>
                <CardFooter>
                    <Button onClick={saveLegalContent}><Save className="w-4 h-4 ml-2" /> ุญูุธ ุงููุญุชูู ุงููุงูููู</Button>
                </CardFooter>
            </Card>
        </div>
    );
};

export default React.memo(ContentManagement);